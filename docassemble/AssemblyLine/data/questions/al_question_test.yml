---
################ What is this? ###############
# This file is a small playground to demo new features.
# If you are building a new feature, it should also have an accompanying
# test. This file is not a test, just a demo to assist PRs and will change
# frequently as new features are added.
---
include:
  - al_package.yml
---
code: |
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  AL_DEFAULT_STATE = "MA"
---
# Allow flexible customization of header logo titles
code: |
  AL_LOGO_TITLE_ROW_1 = "Title Row 1"
---
code: |
  AL_LOGO_TITLE_ROW_2 = "Title Row 2"
---
# Allow flexible customization of header logo short titles
code: |
  AL_LOGO_SHORT_TITLE_ROW_1 = "Short Row 1"
---
code: |
  AL_LOGO_SHORT_TITLE_ROW_2 = "Short Row 2"
---
metadata:
  title: |
    AL Question Test    
  authors:
    - Quinten Steenhuis
    - Plocket
    - Lily
    - Bryce Willey
    - Caroline Robinson
    - David Colarusso
    - Kate Barry
---
modules:
  - docassemble.base.util
  - docassemble.base.core
  - docassemble.base.functions
---
objects:
  - chiropractors: ALPeopleList.using(target_number=1, ask_number=True)
  - children: ALPeopleList.using(ask_number=True, complete_attribute="complete")
---
mandatory: True
code: |
  al_intro_screen
  test_label_functions
  feature_tests_1
  al_user_bundle
  chiropractors.gather()
  other_parties.gather()
  users.gather()
  users[0].gender  
  users[0].address.address
  users[0].mailing_address.address
  users[0].phone_number
  trial_court
  big_text_field  
  children.gather()
  preview_screen
  basic_questions_signature_flow
  many_bundles_test
  end
---
question: |
  Test
fields:
  - code: |
      users[0].name_fields()
  - code: |
      users[0].gender_fields()
  - code: |
      users[0].address_fields(country_code=AL_DEFAULT_COUNTRY, default_state=AL_DEFAULT_STATE)
continue button field: test_label_functions
---
code: |
  children[i].name.first
  children[i].birthdate
  children[i].complete=True
---
# Page to test certain features
# Reduced text for ease of testing custom audio element
# Currently testing:
# - Custom audio element reading behavior is correct
# - Custom audio element reading behavior is correct
id: test behavior of some features
continue button field: feature_tests_1
question: |
  Test custom audio element behavior on help button
help: |
  Show help screen
---
id: preview
continue button field: preview_screen
question: |
  The preview copy of your form is ready
subquestion: |
  Take a look at the files below. When you are ready, click "next"
  to continue and add your signature.
    
  ${ al_user_bundle.as_pdf(key='preview') }

  [Edit mako_template status](${ url_action('mako_template_enabled') })

  [Edit user's name](${url_action('users[0].name.first')})
---
question: |
  Try a big text field
subquestion: |
  Try more than 200 characters to trigger addendum.
fields:
  - Write something: big_text_field
    datatype: area
---
objects:
  # Mako template will use the generic addendum
  - mako_template: ALDocument.using(title="Mako template", filename="mako_template", has_addendum=True, default_overflow_message=" [See addendum]")
  # `has_addendum` should be taken care of by a default attr
  - word_template: ALDocument.using(title="Word Template", filename="word_template", enabled=True)
  - exhibit_attachment: ALExhibitDocument.using(title="Exhibits", filename="exhibits" )
---
code: |
  exhibit_attachment.enabled = len(exhibit_attachment.exhibits) > 0
---
id: Mako template
question: |
  Enable Mako template?
yesno: mako_template_enabled
---
code: |
  # You must use an intermediate value to set the enabled status, because it is not 
  # cached longer than one page load. You do not need to explicitly reconsider it.
  mako_template.enabled = mako_template_enabled 
---
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[mako_template, word_template, static_template, exhibit_attachment], filename="user_bundle.pdf", title="All forms to download for your records")
  - al_court_bundle: ALDocumentBundle.using(elements=[mako_template, word_template], filename='court_bundle.pdf', title='All forms to send to the court')
  - al_single_doc_bundle: ALDocumentBundle.using(elements=[mako_template], filename="one_file_bundle.pdf", title="One file")
---
code: |
  # This is used in the subject of the email template when someone
  # emails from ending screen.
  metadata_title = "AssemblyLine Question Test"
---
code: |
  mako_template.overflow_fields['big_text_field'].overflow_trigger = 200
  mako_template.overflow_fields['children'].overflow_trigger = 2
  mako_template.overflow_fields.gathered = True
---
attachment:
  variable name: mako_template[i]
  content: |
    # Mako template
    
    You live at ${ users[0].address.on_one_line() }
    
    Your phone number(s) are: ${ users[0].phone_numbers() }.
    
    You can be reached by ${ users[0].contact_methods() }.

    You have ${ len(children) } children, named ${ children.familiar() }

    Here is the safe value of "big_text_field":
    
    > ${ mako_template.safe_value('big_text_field') }

    % if len(children):
    Here is some information about your first 2 children:

    Name | Age
    -----|----
    % for child in mako_template.safe_value('children'):
    ${ child } | ${ child.age_in_years() }
    % endfor
    % endif
    
    Signed,
    % if i == 'final':
    ${ users[0].signature }
    % else:
    [Sign here]
    % endif
---
attachment: 
  variable name: word_template[i]
  docx template file: sample_word_template.docx
  filename: sample_word_template.docx
---
objects:
  - static_template: ALStaticDocument.using(title="Test Static Document", filename="lt1-pullout-10-getting-organized.pdf", enabled=True)
---
id: end if we need it
event: end
question: Great job!
---
need: al_user_bundle
id: one enabled doc
continue button field: one_enabled_doc_test
question: |
  One enabled file
subquestion: |
  ${ al_user_bundle.download_list_html(format="docx") }
---
need: al_user_bundle
id: download test end screen
continue button field: many_bundles_test
question: |
  Your files are ready to download below
subquestion: |
  ---
  
  **Standard Table, view buttons are hidden**
  
  ${ al_user_bundle.download_list_html(view=False) }
  
  ${ al_user_bundle.send_button_html(show_editable_checkbox=False) }
    
  ${ al_user_bundle.as_pdf() }
  
  ---
  
  **No zip, docx format**
  
  ${ al_user_bundle.download_list_html( include_zip=False, format="docx") }
  
  ---
  
  **Single file**
  
  ${ al_single_doc_bundle.download_list_html() }
