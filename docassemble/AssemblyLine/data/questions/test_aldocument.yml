---
include:
  - al_package.yml
---
metadata:
  title: |
    Test ALDocument class
---
continue button field: intro_screen
question: |
  Intro screen
---
mandatory: True
code: |
  intro_screen
  as_foo_defaults
  download_list_html_defaults
  #download_html_defaults
  email_defaults
  as_foo_custom
  download_list_html_custom_1
  download_list_html_custom_2
  download_list_html_custom_3
  #download_html_custom_1
  #download_html_custom_2
  email_custom
  end_aldocument_tests
---
objects:
  # No addenda, all start enabled
  - multi_bundle_1: ALDocumentBundle.using(elements=[pdf_1, docx_1, notice_to_quit], title="Multiple docs 1", filename="multi_bundle_1" )
  - single_pdf_bundle_1: ALDocumentBundle.using(elements=[pdf_1], title="One pdf", filename="single_pdf_1" )
  - single_docx_bundle_1: ALDocumentBundle.using(elements=[docx_1], title="One docx", filename="single_docx_1" )
---
objects:
  - pdf_1: ALDocument.using( title="PDF 1", filename="pdf_doc_1", enabled=True, has_addendum=False )
  - docx_1: ALDocument.using( title="Docx 1", filename="docx_doc_1", enabled=True, has_addendum=False )
  - notice_to_quit: ALDocumentUpload.using(title="Notice to Quit", filename="notice_to_quit")
---
attachment: 
  variable name: pdf_1[i]
  pdf template file: test_aldocument_pdf_1.pdf
  filename: pdf_1
  fields:
    - "sample_field": "Sample input"
---
attachment: 
  variable name: docx_1[i]
  docx template file: test_aldocument_docx_1.docx
  filename: docx_1
---
# TODO: Do we/how do we test that correct defaults have been used? Esp. for args like `refresh`
---
# Caching seems to be working - it took the same amount of time to show with just multi_bundle as with all of them.
id: as_foo_defaults
continue button field: as_foo_defaults
question: |
  Get condensed bundle functions defaults
subquestion: |
  
  multi_bundle_1.as_pdf()
  
  ${ multi_bundle_1.as_pdf() }
  
  multi_bundle_1.preview()
  
  ${ multi_bundle_1.preview() }
  
  multi_bundle_1.as_zip()
  
  ${ multi_bundle_1.as_zip() }
  
  ---
  
  single_pdf_bundle_1.as_pdf()
  
  ${ single_pdf_bundle_1.as_pdf() }
  
  single_pdf_bundle_1.preview()
  
  ${ single_pdf_bundle_1.preview() }
  
  single_pdf_bundle_1.as_zip()
  
  ${ single_pdf_bundle_1.as_zip() }
  
  ---
  
  single_docx_bundle_1.as_pdf()
  
  ${ single_docx_bundle_1.as_pdf() }
  
  single_docx_bundle_1.preview()
  
  ${ single_docx_bundle_1.preview() }
  
  single_docx_bundle_1.as_zip()
  
  ${ single_docx_bundle_1.as_zip() }
  
  ---
---
id: download_list_html_defaults
continue button field: download_list_html_defaults
question: |
  download_list_html() defaults
subquestion: |
  All should be pdfs.
  
  Note: We're deprecating `download_html()` and removing it, so it will not be tested in here.

  multi_bundle_1.download_list_html() with send button for alignment comparison
  
  ${ multi_bundle_1.download_list_html() }
  
  ${ multi_bundle_1.send_button_html() }
  
  multi_bundle_1.download_list_html( include_email=True )
  
  ${ multi_bundle_1.download_list_html( include_email=True ) }

  single_pdf_bundle_1.download_list_html()
  
  ${ single_pdf_bundle_1.download_list_html() }
  
  single_pdf_bundle_1.download_list_html( include_email=True )
  
  ${ single_pdf_bundle_1.download_list_html( include_email=True ) }

  single_docx_bundle_1.download_list_html()
  
  ${ single_docx_bundle_1.download_list_html() }
---
# Keeping this in here until method is completely removed just in case other decisions are made
#id: download_html_defaults
#continue button field: download_html_defaults
#question: |
#  download_html() defaults
#subquestion: |
#  multi_bundle_1.download_html()
#  
#  ${ multi_bundle_1.download_html() }
---
id: email_defaults
continue button field: email_defaults
question: |
  send_button_html() defaults
subquestion: |
  multi_bundle_1.send_button_html()

  ${ multi_bundle_1.send_button_html() }
  
  single_pdf_bundle_1.send_button_html()

  ${ single_pdf_bundle_1.send_button_html() }
  
  single_docx_bundle_1.send_button_html()

  ${ single_docx_bundle_1.send_button_html() }
---
id: as_foo_custom
continue button field: as_foo_custom
question: |
  Get condensed bundles with custom args
subquestion: |
  - .as_pdf(), .preview(), .as_zip()
  - All possible custom args passed in. Not sure how to test use of these. We'll at least test that nothing errors.
  
  multi_bundle_1.as_pdf( key="test_key", refresh=False )
  
  ${ multi_bundle_1.as_pdf( key="test_key", refresh=False ) }
  
  multi_bundle_1.preview( refresh=False )
  
  ${ multi_bundle_1.preview( refresh=False ) }
  
  multi_bundle_1.as_zip( key="test_key", refresh=False, title="Custom title" )
  
  ${ multi_bundle_1.as_zip( key="test_key", refresh=False, title="Custom title" ) }
  
  ---
  
  single_pdf_bundle_1.as_pdf( key="test_key", refresh=False )
  
  ${ single_pdf_bundle_1.as_pdf( key="test_key", refresh=False ) }
  
  single_pdf_bundle_1.preview( refresh=False )
  
  ${ single_pdf_bundle_1.preview( refresh=False ) }
  
  single_pdf_bundle_1.as_zip( key="test_key", refresh=False, title="Custom title" )
  
  ${ single_pdf_bundle_1.as_zip( key="test_key", refresh=False, title="Custom title" ) }
  
  ---
  
  single_docx_bundle_1.as_pdf( key="test_key", refresh=False )
  
  ${ single_docx_bundle_1.as_pdf( key="test_key", refresh=False ) }
  
  single_docx_bundle_1.preview( refresh=False )
  
  ${ single_docx_bundle_1.preview( refresh=False ) }
  
  single_docx_bundle_1.as_zip( key="test_key", refresh=False, title="Custom title" )
  
  ${ single_docx_bundle_1.as_zip( key="test_key", refresh=False, title="Custom title" ) }
  
  ---
---
comment: |
  Defaults are:
    key:str='final',
    format:str='pdf',
    view:bool=True,
    refresh:bool=True,
    include_zip:bool = True,
    view_label="View",
    view_icon:str="eye",
    download_label:str="Download",
    download_icon:str="download",
    zip_label:str="Download zip",
    zip_icon:str="file-archive"
id: download_list_html_custom_1
continue button field: download_list_html_custom_1
question: |
  download_list_html() with custom args (1)
subquestion: |
  Unchanged:
  
  - Keep "view" as True
  - Keep "include_zip" as True
  
  multi_bundle_1.download_list_html( key="test_key", format="docx", refresh=False, view_label="Custom view label", view_icon="circle", download_label="Custom download label", download_icon="square", zip_label="Custom zip label", zip_icon="clock" )
  
  ${ multi_bundle_1.download_list_html( key="test_key", format="docx", refresh=False, view_label="Custom view label", view_icon="circle", download_label="Custom download label", download_icon="square", zip_label="Custom zip label", zip_icon="clock" ) }
  
  ---
  
  single_pdf_bundle_1.download_list_html( key="test_key", format="docx", refresh=False, view_label="Custom view label", view_icon="circle", download_label="Custom download label", download_icon="square", zip_label="Custom zip label", zip_icon="clock" )
  
  ${ single_pdf_bundle_1.download_list_html( key="test_key", format="docx", refresh=False, view_label="Custom view label", view_icon="circle", download_label="Custom download label", download_icon="square", zip_label="Custom zip label", zip_icon="clock" ) }
  
  ---
  
  single_docx_bundle_1.download_list_html( key="test_key", format="docx", refresh=False, view_label="Custom view label", view_icon="circle", download_label="Custom download label", download_icon="square", zip_label="Custom zip label", zip_icon="clock" )
  
  ${ single_docx_bundle_1.download_list_html( key="test_key", format="docx", refresh=False, view_label="Custom view label", view_icon="circle", download_label="Custom download label", download_icon="square", zip_label="Custom zip label", zip_icon="clock" ) }
  
  ---
---
id: download_list_html_custom_2
continue button field: download_list_html_custom_2
question: |
  download_list_html() with custom args (2)
subquestion: |
  multi_bundle_1.download_list_html( view=False, include_zip=False )
  
  ${ multi_bundle_1.download_list_html( view=False, include_zip=False ) }
  
  ---
  single_pdf_bundle_1.download_list_html( view=False, include_zip=False )
  
  ${ single_pdf_bundle_1.download_list_html( view=False, include_zip=False ) }
  
  ---
  single_docx_bundle_1.download_list_html( view=False, include_zip=False )
  
  ${ single_docx_bundle_1.download_list_html( view=False, include_zip=False ) }
  
  ---
---
id: download_list_html_custom_3
continue button field: download_list_html_custom_3
question: |
  download_list_html() with custom args (3)
subquestion: |
  
  multi_bundle_1.download_list_html( view=True, format="docx" )
  
  ${ multi_bundle_1.download_list_html( view=True, format="docx" ) }  
  
  _Zip should contain 3 files: docx, pdf, and PDF conversion of docx._
  
  ---
  
  multi_bundle_1.download_list_html( view=False, format="docx" )
  
  ${ multi_bundle_1.download_list_html( view=False, format="docx" ) }  

  _Zip should contain 2 files: docx, pdf._
---
# Keeping these in here until method is completely removed just in case other decisions are made
#comment: |
#  Defaults:
#    key:str ='final',
#    format:str ='pdf',
#    view:bool=True,
#    refresh:bool=True,
#    view_label:str='View',
#    view_icon:str='eye',
#    download_label:str="Download",
#    download_icon:str="download"
#id: download_html_custom_1
#continue button field: download_html_custom_1
#question: |
#  download_html() with custom args (1)
#subquestion: |
#  WARNING:
#    format="docx" not yet functional
#
#  Unchanged:
#  
#  - Keep "view" as True
#  
#  multi_bundle_1.download_html( key="test_key", format="docx", refresh=False, view_label="Custom view label", view_icon="circle", download_label="Custom download label", download_icon="square" )
#
#  ${ multi_bundle_1.download_html( key="test_key", format="docx", refresh=False, view_label="Custom view label", view_icon="circle", download_label="Custom download label", download_icon="square" ) }
#---
#id: download_html_custom_2
#continue button field: download_html_custom_2
#question: |
#  download_html() with custom args (2)
#subquestion: |
#  multi_bundle_1.download_html( view=False )
#
#  ${ multi_bundle_1.download_html( view=False ) }
---
id: email_custom
continue button field: email_custom
question: |
  send_button_html() with custom args
subquestion: |
  multi_bundle_1.send_button_html( key="test_key", show_editable_checkbox=False )
  
  ${ multi_bundle_1.send_button_html( key="test_key", show_editable_checkbox=False ) }
  
  ---
  single_pdf_bundle_1.send_button_html( key="test_key", show_editable_checkbox=False )
  
  ${ single_pdf_bundle_1.send_button_html( key="test_key", show_editable_checkbox=False ) }
  
  ---
  single_docx_bundle_1.send_button_html( key="test_key", show_editable_checkbox=False )
  
  ${ single_docx_bundle_1.send_button_html( key="test_key", show_editable_checkbox=False ) }
  
  ---
---
id: end aldocument tests
event: end_aldocument_tests
question: The end of ALDocument tests
---