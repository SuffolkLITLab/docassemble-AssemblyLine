##########################
# This file mostly holds placeholder values that will be overwritten
# by individual interviews. Overriding is as simple as copying, altering
# and writing in the value that you want.
---
code: |
  # Set this to the name of your application
  # Defaults to checking for a possible name from global docassemble config
  al_app_name = get_config('appname', get_config('external hostname','CourtFormsOnline.org'))
---
code: |
  # The name of your organization. Defaults to a similar value as `al_app_name`,
  # but is still distinct
  AL_ORGANIZATION_TITLE = get_config('appname', 'CourtFormsOnline')
---
code: |
  AL_ORGANIZATION_HOMEPAGE = get_config('app homepage', 'https://courtformsonline.org')
---
###########################
# localization and internationalization / i18n settings
---
code: |
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  AL_DEFAULT_STATE = None
---
code: |
  AL_DEFAULT_LANGUAGE = "en"
---
###############################
# Features
---
features:
  navigation: True 
  cache documents: False
  javascript:
    - limit_upload_size.js  
---
id: set basic options
mandatory: True
code: |
  # Set some variables that we need in all the interviews
  multi_user = True
  allow_cron = True
  speak_text = get_config('voicerss', {}).get('enable', False)
  set_live_help_status(availability='available', mode='help',partner_roles=['housing','family law'])
---
code: |
  form_approved_for_email_filing = False # Default is that the form is not e-filable
---
code: |
  # al_form_type can be one of:
  # 1. Court-case types: 'starts_case','existing_case','appeal'
  # 3. Letter: "letter"
  # 4. Other: "other", "other_form"
  al_form_type = "other" # We won't assume this is a court case
---
code: |
  if len(other_parties):
    set_parts(subtitle=str(users) + ' op. ' + str(other_parties))
  else:
    set_parts(subtitle=str(users))
  update_answer_title = True
---
comment: |
  This placeholder is used in the intro screen.
  
  In general, the title should follow the format
  "Ask the court for..." or "Respond to a ..." with a short, plain language
  description of what using the interview will accomplish.
code: |
  interview_short_title = "[PLACEHOLDER: Ask the court for a ...]"  
---
code: |
  metadata_title = next(iter(interview_metadata.elements.values()),{}).get('title')
  
  # Check if the title was an actual text entry, or None
  if metadata_title:
    interview_short_title = "Ask the court for a " + metadata_title
  else:
    # This branch will happen for Docx where the interview_metadata dictionary
    # was never defined.
    interview_short_title = "[PLACEHOLDER: Ask the court for a ...]"  
---
imports:
  - importlib
  - docassemble.AssemblyLine # INSTALLED version of the package
---
code: |
  try:
    al_version = "AL-" + str(docassemble.AssemblyLine.__version__)
  except:
    al_version = ""
---
code: |
  try:
    package_version_number = str(importlib.import_module(user_info().package).__version__)
  except:
    package_version_number = "playground"    
---
code: |
  AL_DEFAULT_OVERFLOW_MESSAGE = "..."
---
code: |
  al_form_requires_digital_signature = True
---
code: |
  al_person_answering = "user"